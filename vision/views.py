from rest_framework import generics
from rest_framework.permissions import AllowAny
from .models import PhotoAnalysis
from .serializers import PhotoAnalysisSerializer
from chat.models import Dialog, Message  # ‚Üê –¥–æ–±–∞–≤–∏–ª–∏
from chat.services import generate_ai_reply  # ‚Üê –¥–æ–±–∞–≤–∏–ª–∏

class PhotoAnalysisListCreateView(generics.ListCreateAPIView):
    queryset = PhotoAnalysis.objects.all().order_by("-created_at")
    serializer_class = PhotoAnalysisSerializer
    permission_classes = [AllowAny]

    def perform_create(self, serializer):
        obj = serializer.save()
        if obj.dialog_id:
            dialog = Dialog.objects.get(pk=obj.dialog_id)

            # —Å–æ–∑–¥–∞—ë–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
            base_content = f"üì∑ –ö–ª–∏–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∏–ª —Ñ–æ—Ç–æ. –ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π: {obj.result_label} ({obj.result_score})."
            Message.objects.create(dialog=dialog, role="assistant", content=base_content)

            # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ò–ò-–ø—Å–∏—Ö–æ–ª–æ–≥–∞
            try:
                from chat.services import generate_photo_comment
                ai_text = generate_photo_comment(obj.result_label, obj.result_score)
                Message.objects.create(dialog=dialog, role="assistant", content=ai_text)
            except Exception as e:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:", e)
